AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  BucketName:
      Type: String

Resources:
  SimpleDeployFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SimpleDeployFunction
      Timeout: 300
      Handler: simple.handler
      Runtime: python3.6
      CodeUri: build/simple.zip
      Policies: AWSLambda_FullAccess

  CalculateWeights:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeployWorkflow-CalculateWeights
      Timeout: 300
      Handler: calculate_weights.handler
      Runtime: python3.6
      CodeUri: build/calculate_weights.zip
      Policies: AWSLambda_FullAccess

  UpdateWeight:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeployWorkflow-UpdateWeight
      Timeout: 300
      Handler: update_weight.handler
      Runtime: python3.6
      CodeUri: build/update_weight.zip
      Policies: AWSLambda_FullAccess

  HealthCheck:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeployWorkflow-HealthCheck
      Timeout: 300
      Handler: health_check.handler
      Runtime: python3.6
      CodeUri: build/health_check.zip
      Policies: AWSLambda_FullAccess

  Rollback:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeployWorkflow-Rollback
      Timeout: 300
      Handler: rollback.handler
      Runtime: python3.6
      CodeUri: build/rollback.zip
      Policies: AWSLambda_FullAccess

  Finalize:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeployWorkflow-Finalize
      Timeout: 300
      Handler: finalize.handler
      Runtime: python3.6
      CodeUri: build/finalize.zip
      Policies: AWSLambda_FullAccess

  StateMachineExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                !Join [ ".", [ "states", !Ref "AWS::Region", "amazonaws.com"] ]
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "lambda:InvokeFunction"
                Resource: "*"

  DeployStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StateMachineExecutionRole.Arn
      DefinitionString: !Sub |-
        {
          "Comment": "A state machine that deploys a Lambda function incrementally using a Weighted Alias",
          "StartAt": "CalculateWeights",
          "States": {
            "CalculateWeights": {
              "Type": "Task",
              "Resource": "${CalculateWeights.Arn}",
              "ResultPath": "$.weights",
              "Next": "UpdateWeight"
            },
            "UpdateWeight": {
              "Type": "Task",
              "Resource": "${UpdateWeight.Arn}",
              "ResultPath": "$.current-weight",
              "Next": "Wait"
            },
            "Wait": {
              "Type": "Wait",
              "SecondsPath": "$.interval",
              "Next": "HealthCheck"
            },
            "HealthCheck": {
              "Type": "Task",
              "Resource": "${HealthCheck.Arn}",
              "Next": "VerifyHealthCheck",
              "InputPath": "$",
              "ResultPath": "$.status"
            },
            "VerifyHealthCheck": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.status",
                  "StringEquals": "FAILED",
                  "Next": "Rollback"
                },
                {
                  "Variable": "$.status",
                  "StringEquals": "SUCCEEDED",
                  "Next": "IsFullyWeighted"
                }
              ],
              "Default": "Rollback"
            },
            "IsFullyWeighted": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.current-weight",
                  "NumericEquals": 1,
                  "Next": "Finalize"
                }
              ],
              "Default": "UpdateWeight"
            },
            "Rollback": {
              "Type": "Task",
              "Resource": "${Rollback.Arn}",
              "Next": "Fail",
              "InputPath": "$",
              "ResultPath": "$"
            },
            "Fail": {
              "Type": "Fail",
              "Cause": "Function deployment failed",
              "Error": "HealthCheck returned FAILED"
            },
            "Finalize": {
              "Type": "Task",
              "Resource": "${Finalize.Arn}",
              "InputPath": "$",
              "End": true
            }
          }
        }
